# -*- coding: utf-8 -*-
"""Bản sao của S5_MC4AI_ASM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W8Td1djoYuxgtOIIrBgbKr95RJYQ0j4U

<h1><center>

<img src="https://i.imgur.com/LSeMSbh.jpg" alt="logo" width="700" height="300">
<h1><b>SESSION 5 - LINEAR REGRESSION</b></h1>

</center></h1>

<h1><b><center>ƯỚC LƯỢNG DOANH THU CỦA MỘT CÔNG TY BÁN KEM DỰA VÀO NHIỆT ĐỘ TRONG THÁNG</center></b></h1>

#**Create Data**

Tạo short-cut đến [**dataset**](https://drive.google.com/file/d/1wZETgqcnl0dQJ8FV3hI_Y64LK1KNfGyE/view?usp=share_link) từ Google Drive rồi chạy các cell code dưới đây để tạo data
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import numpy as np

df = pd.read_csv('/content/drive/MyDrive/IceCreamData.csv')
df.head()

x = df['Temperature'].values
y = df['Revenue'].values
x.shape, y.shape

"""#**TODO: Visualize Data**

Scatter các điểm (x,y)
"""

# YOUR CODE HERE

"""#**TODO: Split Data**

Tách tập dữ liệu (x,y) thành 2 tập train, test bằng thư viện **scikit-learn** ([document](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html)) sao cho tập test có 50 sample. In ra shape của các tập dữ liệu để biết kết quả
"""

# YOUR CODE HERE

"""Scatter lại 2 tập train, test (2 tập 2 màu khác nhau)"""

# YOUR CODE HERE

"""#**TODO: Create, Train, Evaluate**

Tạo và fit model trên tập train (chú ý shape)
"""

# YOUR CODE HERE

"""**Weights**"""

# YOUR CODE HERE

"""**Evaluate:** đánh giá model trên tập test"""

# YOUR CODE HERE

"""#**TODO: Regression Line**

Scatter lại tập (x,y) và plot Regression Line
"""

# YOUR CODE HERE

"""#**TODO: Save Model**"""

# YOUR CODE HERE

"""#**TODO: Deploy Streamlit App**

Tạo ứng dụng Streamlit (dùng Streamlit Cloud) cho phép người dùng nhập vào nhiệt độ, xuất ra doanh thu dự báo trong tháng

<center>
<img src="https://i.imgur.com/StAakCD.png"height="300">
<h1>
</center>

![]()

**Lưu ý:**
- Có thể tạo repository mới (đặt tên tuỳ ý) hoặc dùng lại repository cũ (`my-first-streamlit-app`)
- Download file model đã lưu ở trên rồi upload lên repository, sau đó load lại model (bằng thư viện pickle) để dùng cho predict
- requirements.txt
```
pickles
scikit-learn
```


---



**YOUR REPOSITORY LINK:**

#**Bonus**
Làm lại bài toán trên mà không dùng thư viện `scikit-learn` (chỉ dùng `numpy`)

**Tính ra bộ trọng số bằng công thức đạo hàm**

Nhắc lại công thức tính bộ trọng số tối ưu của bài toán Linear Regression:

$$\bar{𝐰} = (\bar{𝐗}^T\bar{𝐗})^{-1}\bar{𝐗}^T𝐲$$

**Lưu ý:**
- Dùng hàm `np.linalg.pinv` để tính ma trận nghịch đảo (chỉ có ma trận vuông mới có ma trận nghịch đảo)
- Có thể dùng `list` và vòng lặp để tạo ma trận $\bar{𝐗}$ (nếu không dùng được các hàm `numpy`)
- Để nhân ma trận có thể dùng cú pháp ngắn gọn như sau
```python
c = a @ b # thay vì c = np.dot(a,b)
```
"""

# YOUR CODE HERE

"""**Tính MAE, MSE** (bằng hàm numpy)"""

# YOUR CODE HERE

"""**Tự viết class LinearRegression** tương tự như class của thư viện `scikit-klearn` (gồm 2 hàm `fit` và `predict`), sau đó gọi tạo đối tượng của class rồi gọi hàm để kiểm tra & so sánh kết quả"""

import numpy as np

# YOUR CODE HERE
class LinearRegression:
  def fit(self, x, y):
    pass

  def predict(self, x):
    pass